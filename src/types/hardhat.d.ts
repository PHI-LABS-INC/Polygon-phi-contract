/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import * as Contracts from ".";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";
import { ethers } from "ethers";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "IERC1155ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IBasePlate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBasePlate__factory>;
    getContractFactory(
      name: "IFreeObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFreeObject__factory>;
    getContractFactory(
      name: "IObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IObject__factory>;
    getContractFactory(
      name: "IPhiMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPhiMap__factory>;
    getContractFactory(
      name: "IPhiShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPhiShop__factory>;
    getContractFactory(
      name: "IPremiumObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPremiumObject__factory>;
    getContractFactory(
      name: "IQuestObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuestObject__factory>;
    getContractFactory(
      name: "IRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegistry__factory>;
    getContractFactory(
      name: "IWallPaper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWallPaper__factory>;
    getContractFactory(
      name: "BasePlate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasePlate__factory>;
    getContractFactory(
      name: "FreeObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FreeObject__factory>;
    getContractFactory(
      name: "PremiumObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PremiumObject__factory>;
    getContractFactory(
      name: "QuestObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.QuestObject__factory>;
    getContractFactory(
      name: "WallPaper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WallPaper__factory>;
    getContractFactory(
      name: "PhiClaim",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PhiClaim__factory>;
    getContractFactory(
      name: "PhiMap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PhiMap__factory>;
    getContractFactory(
      name: "PhiShop",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PhiShop__factory>;
    getContractFactory(
      name: "Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Registry__factory>;
    getContractFactory(
      name: "BaseObject",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseObject__factory>;
    getContractFactory(
      name: "MultiOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MultiOwner__factory>;

    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "IERC1155ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155ReceiverUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Supply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IBasePlate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBasePlate>;
    getContractAt(
      name: "IFreeObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFreeObject>;
    getContractAt(
      name: "IObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IObject>;
    getContractAt(
      name: "IPhiMap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPhiMap>;
    getContractAt(
      name: "IPhiShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPhiShop>;
    getContractAt(
      name: "IPremiumObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPremiumObject>;
    getContractAt(
      name: "IQuestObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IQuestObject>;
    getContractAt(
      name: "IRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegistry>;
    getContractAt(
      name: "IWallPaper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWallPaper>;
    getContractAt(
      name: "BasePlate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasePlate>;
    getContractAt(
      name: "FreeObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FreeObject>;
    getContractAt(
      name: "PremiumObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PremiumObject>;
    getContractAt(
      name: "QuestObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.QuestObject>;
    getContractAt(
      name: "WallPaper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WallPaper>;
    getContractAt(
      name: "PhiClaim",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PhiClaim>;
    getContractAt(
      name: "PhiMap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PhiMap>;
    getContractAt(
      name: "PhiShop",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PhiShop>;
    getContractAt(
      name: "Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Registry>;
    getContractAt(
      name: "BaseObject",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseObject>;
    getContractAt(
      name: "MultiOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MultiOwner>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
